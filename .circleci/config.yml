version: 2.1

orbs:
  node: circleci/node@5

jobs:
  test-frontend:
    executor: node/default
    working_directory: ~/project/frontend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
        path: ~/project

      - node/install-packages:
          pkg-manager: npm

      - run:
          name: Change to frontend directory
          command: cd frontend
      - run:
          command: npm install jest-junit
      - run:
          name: Run frontend tests
          command: npm test -- --ci --reporters=default --reporters=jest-junit
      - run:
          name: Run frontend linter
          command: npm run lint
      - store_test_results:
          path: ./test-results/

  build-frontend:
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout
        path: ~/project
      - run:
          name: Change to frontend directory
          command: cd frontend
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy frontend artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: frontend-build

  test-backend:
    executor: node/default
    working_directory: ~/project/backend
    environment:
      JEST_JUNIT_OUTPUT_DIR: ./test-results/
    steps:
      - checkout
        path: ~/project
      - run:
          name: Change to backend directory
          command: cd backend
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm install jest-junit
      - run:
          name: Run backend tests
          command: npm test -- --ci --reporters=default --reporters=jest-junit
      - run:
          name: Run backend linter
          command: npm run lint
      - store_test_results:
          path: ./test-results/

  build-backend:
    executor: node/default
    working_directory: ~/project/backend
    steps:
      - checkout
        path: ~/project
      - run:
          name: Change to backend directory
          command: cd backend
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      - run:
          name: Copy backend artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: backend-build

workflows:
  build-and-test:
    jobs:
      - test-frontend
      - build-frontend:
          requires:
            - test-frontend
      - test-backend:
          requires:
            - build-frontend
      - build-backend:
          requires:
            - test-backend
